{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  products: []\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = state.products.find(item => item.id === action.payload.id);\n\n      if (item) {\n        item.quantity += action.payload.quantity;\n      } else {\n        state.products.push(action.payload);\n      }\n    },\n    removeItem: (state, action) => {\n      state.products = state.products.filter(item => item.id !== action.payload);\n    },\n    incrementByAmount: (state, action) => {\n      state.products = [];\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addToCart,\n  removeItem,\n  resetCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/jcfru/Desktop/shop/client/src/redux/cartReducer.js"],"names":["createSlice","initialState","products","cartSlice","name","reducers","addToCart","state","action","item","find","id","payload","quantity","push","removeItem","filter","incrementByAmount","resetCart","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC;AADQ,CAArB;AAIA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;AACnCI,EAAAA,IAAI,EAAE,MAD6B;AAEnCH,EAAAA,YAFmC;AAGnCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,IAAI,GAAGF,KAAK,CAACL,QAAN,CAAeQ,IAAf,CAAqBD,IAAD,IAAQA,IAAI,CAACE,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAAvD,CAAb;;AACE,UAAGF,IAAH,EAAQ;AACJA,QAAAA,IAAI,CAACI,QAAL,IAAeL,MAAM,CAACI,OAAP,CAAeC,QAA9B;AACH,OAFD,MAEK;AACDN,QAAAA,KAAK,CAACL,QAAN,CAAeY,IAAf,CAAoBN,MAAM,CAACI,OAA3B;AACH;AAEJ,KATO;AAURG,IAAAA,UAAU,EAAE,CAACR,KAAD,EAAOC,MAAP,KAAkB;AAC5BD,MAAAA,KAAK,CAACL,QAAN,GAAeK,KAAK,CAACL,QAAN,CAAec,MAAf,CAAsBP,IAAI,IAAEA,IAAI,CAACE,EAAL,KAAYH,MAAM,CAACI,OAA/C,CAAf;AACD,KAZO;AAaRK,IAAAA,iBAAiB,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACL,QAAN,GAAiB,EAAjB;AACD;AAfO;AAHyB,CAAD,CAA7B,C,CAsBP;;AACA,OAAO,MAAM;AAAEI,EAAAA,SAAF;AAAaS,EAAAA,UAAb;AAAyBG,EAAAA;AAAzB,IAAuCf,SAAS,CAACgB,OAAvD;AAEP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    products:[]\r\n}\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart:(state, action) => {\r\n      const item = state.products.find((item)=>item.id === action.payload.id)\r\n        if(item){\r\n            item.quantity+=action.payload.quantity\r\n        }else{\r\n            state.products.push(action.payload);\r\n        }\r\n      \r\n    },\r\n    removeItem: (state,action) => {\r\n      state.products=state.products.filter(item=>item.id !== action.payload)\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.products = []\r\n    }\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { addToCart, removeItem, resetCart } = cartSlice.actions\r\n\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}