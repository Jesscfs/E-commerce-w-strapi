{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { makeRequest } from \"../makeRequest\";\nimport { useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const res = await makeRequest.get(url, //populate and all, one more query filters. This will grab the images from the database\n        {\n          headers: {\n            Authorization: `bearer ${process.env.REACT_APP_API_TOKEN}`\n          }\n        });\n        setData(res.data.data);\n      } catch (err) {\n        setError(true);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\n_s(useFetch, \"zzftc7KK+fKkf+FTc61ZRBaeV24=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/jcfru/Desktop/shop/client/src/hooks/useFetch.js"],"names":["useEffect","makeRequest","useState","useFetch","url","data","setData","loading","setLoading","error","setError","fetchData","res","get","headers","Authorization","process","env","REACT_APP_API_TOKEN","err"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAO;AAAA;;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEIF,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,SAAS,GAAE,YAAU;AAC3B,UAAI;AACAH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMI,GAAG,GAAG,MAAMX,WAAW,CAACY,GAAZ,CAAgBT,GAAhB,EAAsB;AACpC;AACIU,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,mBAAoB;AADpD;AADb,SADc,CAAlB;AAOAZ,QAAAA,OAAO,CAACM,GAAG,CAACP,IAAJ,CAASA,IAAV,CAAP;AACH,OAVD,CAUI,OAAOc,GAAP,EAAY;AACZT,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACC;;AACDF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAfD;;AAgBAG,IAAAA,SAAS;AACZ,GAlBQ,EAkBN,CAACP,GAAD,CAlBM,CAAT;AAoBA,SAAO;AAACC,IAAAA,IAAD;AAAOE,IAAAA,OAAP;AAAgBE,IAAAA;AAAhB,GAAP;AACH,CA3BD;;GAAMN,Q;;AA6BN,eAAeA,QAAf","sourcesContent":["import {useEffect} from \"react\";\r\nimport { makeRequest } from \"../makeRequest\";\r\nimport { useState } from \"react\";\r\n\r\nconst useFetch = (url)=>{\r\n\r\nconst [data, setData] = useState(null);\r\nconst [loading, setLoading] = useState(null);\r\nconst [error, setError] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        const fetchData =async ()=>{\r\n        try {\r\n            setLoading(true);\r\n            const res = await makeRequest.get(url,  //populate and all, one more query filters. This will grab the images from the database\r\n                {\r\n                    headers: {\r\n                        Authorization: `bearer ${process.env.REACT_APP_API_TOKEN}`,\r\n                    },\r\n                }\r\n            );\r\n            setData(res.data.data)\r\n        }   catch (err) {\r\n            setError(true);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    return {data, loading, error};\r\n}\r\n\r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}